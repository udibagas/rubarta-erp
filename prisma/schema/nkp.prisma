model Nkp {
  id            Int           @id @default(autoincrement())
  date          DateTime      @default(now()) @db.Date
  number        String?       @db.VarChar(50) // generated by system
  Employee      User?         @relation(fields: [employeeId], references: [id], name: "Nkp")
  employeeId    Int?
  Supplier      Supplier?     @relation(fields: [supplierId], references: [id])
  supplierId    Int?
  Requester     User          @relation(fields: [requesterId], references: [id], name: "NkpRequest")
  requesterId   Int
  description   String        @db.Text
  status        PaymentStatus @default(DRAFT)
  paymentType   PaymentType   @default(EMPLOYEE)
  nkpType       NkpType
  invoiceNumber String?       @db.VarChar(50)

  // bank related
  Bank        Bank     @relation(fields: [bankId], references: [id])
  bankId      Int
  bankAccount String   @db.VarChar(30)
  currency    Currency @default(IDR)
  bankRefNo   String?  @db.VarChar(30)

  // amount related
  grandTotal         Int  @db.Integer
  deduction          Int  @default(0) @db.Integer
  tax                Int  @default(0) @db.Integer
  downPayment        Int  @default(0) @db.Integer
  cashAdvanceBalance Int  @default(0) @db.Integer
  netAmount          Int  @db.Integer
  finalPayment       Int? @db.Integer
  totalAmount        Int? @db.Integer // only for vendor

  // timestamp
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  NkpItem       NkpItem[]
  NkpApproval   NkpApproval[]
  Company       Company         @relation(fields: [companyId], references: [id])
  companyId     Int
  NkpAttachment NkpAttachment[]

  Parent   Nkp? @relation("Parent", fields: [parentId], references: [id])
  Child    Nkp? @relation("Parent")
  parentId Int? @unique

  @@index([employeeId, requesterId, bankId, companyId])
  @@map("Nkp")
}

model NkpItem {
  id          Int      @id @default(autoincrement())
  date        DateTime @db.Date
  description String   @db.Text
  amount      Int      @db.Integer
  currency    Currency @default(IDR)
  Nkp         Nkp?     @relation(fields: [nkpId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  nkpId       Int

  @@index([nkpId])
  @@map("NkpItems")
}

model NkpApproval {
  id                 Int                @id @default(autoincrement())
  User               User               @relation(fields: [userId], references: [id])
  userId             Int
  approvalActionType ApprovalActionType
  level              Int                @db.SmallInt
  Nkp                Nkp                @relation(fields: [nkpId], references: [id])
  approvalStatus     ApprovalStatus? // kirim notifikasi per hari jika status null
  note               String?            @db.VarChar(255)
  createdAt          DateTime           @default(now())
  updatedAt          DateTime?          @updatedAt
  nkpId              Int

  @@unique([userId, nkpId])
  @@index([userId, nkpId])
  @@map("NkpApprovals")
}

model NkpAttachment {
  id          Int     @id @default(autoincrement())
  Nkp         Nkp     @relation(fields: [nkpId], references: [id])
  description String? @db.VarChar(255)

  fileName String @db.VarChar(255)
  filePath String @db.Text
  fileSize Int    @db.Integer
  fileType String @db.VarChar(30)
  nkpId    Int

  @@index([nkpId])
  @@map("NkpAttachments")
}
